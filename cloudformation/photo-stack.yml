AWSTemplateFormatVersion: '2010-09-09'
Description: AI Photo Album - Basic Infrastructure Stack

Resources:

  PhotoStorageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: photo-storage-bucket-3396

  FrontendHostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: photo-album-frontend-3396
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false

  FrontendHostingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendHostingBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "${FrontendHostingBucket.Arn}/*"

  IndexPhotosLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: index-photos-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - rekognition:DetectLabels
                  - es:ESHttpPost
                  - es:ESHttpPut
                Resource: "*"

  IndexPhotosLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: index-photos-cf
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Role: !GetAtt IndexPhotosLambdaRole.Arn
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              return {
                  "statusCode": 200,
                  "body": "Index Lambda placeholder"
              }

  SearchPhotosLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: search-photos-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - es:ESHttpGet
                  - s3:GetObject
                Resource: "*"

  SearchPhotosLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: search-photos-cf
      Handler: lambda_function.lambda_handler
      Runtime: python3.11
      Role: !GetAtt SearchPhotosLambdaRole.Arn
      Code:
        ZipFile: |
          def lambda_handler(event, context):
              return {
                  "statusCode": 200,
                  "body": "Search Lambda placeholder"
              }

Outputs:

  WebsiteURL:
    Description: "Frontend S3 static website URL"
    Value: !GetAtt FrontendHostingBucket.WebsiteURL
